plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.graphql'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor // for mapStruct to work with annotations
    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring" // for mapStruct to work with Spring
}

tasks.named("bootRun") {
    it.dependsOn("compileJava")
}

repositories {
    mavenCentral()
}

def mapstructVersion = '1.4.2.Final'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:11.0.0'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.graphql-java-kickstart:graphiql-spring-boot-starter:11.0.0'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

test {
    useJUnitPlatform()
}
